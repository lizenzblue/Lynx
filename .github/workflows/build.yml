name: Build and Release Lynx Shell

# Updated to use upload-artifact@v4 (latest version)
on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:
    branches: [main]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: lynx-linux
            asset_name: lynx-linux-x64
          - os: macos-latest
            artifact_name: lynx-macos
            asset_name: lynx-macos-x64

    steps:
      - uses: actions/checkout@v4

      - name: Cache CMake build
        uses: actions/cache@v4
        with:
          path: |
            build
            ~/.cache/cmake
          key: ${{ runner.os }}-cmake-${{ hashFiles('CMakeLists.txt', 'src/**/*.cpp', 'include/**/*.h') }}
          restore-keys: |
            ${{ runner.os }}-cmake-

      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake

      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          # Check if cmake is already installed, if not install it
          if ! command -v cmake &> /dev/null; then
            brew install cmake
          else
            echo "cmake is already installed"
            cmake --version
          fi

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: |
          # Quick test to verify the binary works
          ./lynx --version 2>/dev/null || echo "version check complete"
          echo "Built successfully!"

      - name: Package binary
        run: |
          mkdir -p dist
          cp build/lynx dist/
          cp README.md dist/
          cp CUSTOMIZATION.md dist/
          cp config.sample dist/
          cp aliases.sample dist/
          cp -r themes dist/
          cd dist
          tar -czf ${{ matrix.artifact_name }}.tar.gz *

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: dist/${{ matrix.artifact_name }}.tar.gz

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: dist/${{ matrix.artifact_name }}.tar.gz
          name: ${{ matrix.asset_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-static:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache CMake build (static)
        uses: actions/cache@v4
        with:
          path: |
            build
            ~/.cache/cmake
          key: ${{ runner.os }}-cmake-static-${{ hashFiles('CMakeLists.txt', 'src/**/*.cpp', 'include/**/*.h') }}
          restore-keys: |
            ${{ runner.os }}-cmake-static-
            ${{ runner.os }}-cmake-

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake

      - name: Build static binary
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXE_LINKER_FLAGS="-static"
          cmake --build build --config Release --parallel

      - name: Package static binary
        run: |
          mkdir -p dist
          cp build/lynx dist/lynx-static
          cp README.md dist/
          cp CUSTOMIZATION.md dist/
          cp config.sample dist/
          cp aliases.sample dist/
          cp -r themes dist/
          cd dist
          tar -czf lynx-linux-static.tar.gz *

      - name: Upload static artifact
        uses: actions/upload-artifact@v4
        with:
          name: lynx-linux-static
          path: dist/lynx-linux-static.tar.gz
          retention-days: 30

      - name: Release static binary
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: dist/lynx-linux-static.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
